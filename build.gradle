plugins {
    id 'fabric-loom'
    id 'maven-publish'
    id "org.jetbrains.kotlin.jvm"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven {
        url 'https://jitpack.io'
    }
    maven {
        url "https://maven.terraformersmc.com/"
    }
    maven {
        url "https://maven.shedaniel.me/"
    }
    maven {
        url "https://maven.nucleoid.xyz/"
    }
    maven {
        url "https://maven.siphalor.de/"
    }
    maven {
        url "https://repo.spring.io/milestone"
    }
    maven {
        url 'https://repo.spring.io/libs-snapshot'
    }
    mavenCentral()

    // Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

dependencies {
    // yeah... i got really tired finding all of them...
    // is there another way to bundle D4J with all that stuff? ,_,
    include 'com.github.ben-manes.caffeine:caffeine:3.1.0'
    include 'io.micrometer:context-propagation-api:1.0.0-M2'
    include 'com.fasterxml.jackson.core:jackson-core:2.13.3'
    include 'com.fasterxml.jackson.module:jackson-modules-java8:2.13.3'
    include 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.13.3'
    include 'com.fasterxml.jackson.core:jackson-annotations:2.13.3'
    include 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
    include 'io.netty:netty-codec:4.1.77.Final'
    include 'io.netty:netty-codec-dns:4.1.77.Final'
    include('io.netty:netty-codec-http:4.1.77.Final')
    include('io.netty:netty-codec-http2:4.1.77.Final')
    include('io.netty:netty-resolver-dns:4.1.77.Final')
    include("org.reactivestreams:reactive-streams:1.0.4")
    include("io.projectreactor:reactor-core:3.5.0-M2")
    include("io.projectreactor.netty:reactor-netty-core:1.1.0-M2")
    include("io.projectreactor.netty:reactor-netty-http:1.1.0-M2")
    include("io.projectreactor.addons:reactor-extra:3.4.8")
    include 'com.discord4j:discord-json-api:1.7.1'
    include('com.discord4j:discord-json:1.6.12')
    include('com.discord4j:stores-api:3.2.1')
    modImplementation include('com.discord4j:discord4j-voice:3.2.2')
    modImplementation include('com.discord4j:discord4j-gateway:3.2.2')
    modImplementation include('com.discord4j:discord4j-common:3.2.2')
    modImplementation include('com.discord4j:discord4j-core:3.2.2')
    modImplementation include('com.discord4j:discord4j-rest:3.2.2')

    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API.
    modImplementation include(fabricApi.module("fabric-api-base", project.fabric_version))
    modImplementation include(fabricApi.module("fabric-command-api-v2", project.fabric_version))

    modImplementation include("net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}")

    modImplementation include("com.gitlab.Lortseam.completeconfig:base:2.0.0")
    modImplementation include("eu.pb4:placeholder-api:2.0.0-beta.4+1.19")
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    it.options.encoding = "UTF-8"

    // Minecraft 1.18.1 upwards uses Java 17.
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from ("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}

compileKotlin.kotlinOptions.jvmTarget = "17"
